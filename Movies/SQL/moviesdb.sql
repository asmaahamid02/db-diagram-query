-- MySQL Script generated by MySQL Workbench
-- Sat Sep 10 20:53:47 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema moviesdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema moviesdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `moviesdb` DEFAULT CHARACTER SET utf8 ;
USE `moviesdb` ;

-- -----------------------------------------------------
-- Table `moviesdb`.`persons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviesdb`.`persons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `dob` DATE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviesdb`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviesdb`.`movies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `year` YEAR NOT NULL,
  `rating` INT NULL,
  `runtime` TIME NULL,
  `runtime` VARCHAR(45) NULL,
  `genre` VARCHAR(45) NULL,
  `earings_rank` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviesdb`.`actors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviesdb`.`actors` (
  `actor_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  INDEX `fk_actors_persons_idx` (`actor_id` ASC) VISIBLE,
  INDEX `fk_actors_movies1_idx` (`movie_id` ASC) VISIBLE,
  PRIMARY KEY (`actor_id`, `movie_id`),
  CONSTRAINT `fk_actors_persons`
    FOREIGN KEY (`actor_id`)
    REFERENCES `moviesdb`.`persons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actors_movies1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `moviesdb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviesdb`.`directors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviesdb`.`directors` (
  `director_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  INDEX `fk_table1_persons1_idx` (`director_id` ASC) VISIBLE,
  INDEX `fk_table1_movies1_idx` (`movie_id` ASC) VISIBLE,
  PRIMARY KEY (`director_id`, `movie_id`),
  CONSTRAINT `fk_table1_persons1`
    FOREIGN KEY (`director_id`)
    REFERENCES `moviesdb`.`persons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_movies1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `moviesdb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviesdb`.`oscars`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `moviesdb`.`oscars` (
  `movie_id` INT NOT NULL,
  `person_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `year` YEAR NOT NULL,
  INDEX `fk_table1_movies2_idx` (`movie_id` ASC) VISIBLE,
  INDEX `fk_table1_persons2_idx` (`person_id` ASC) VISIBLE,
  PRIMARY KEY (`movie_id`, `person_id`),
  CONSTRAINT `fk_table1_movies2`
    FOREIGN KEY (`movie_id`)
    REFERENCES `moviesdb`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_persons2`
    FOREIGN KEY (`person_id`)
    REFERENCES `moviesdb`.`persons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
